from __future__ import print_function

from .workers.correct import CorrectImage
from .workers.optimization_utils import loss, health, min_arc_length
from .workers.generation import Population
from .workers.graph_algorithms import Graph

import numpy as np


def main():
    # initialization
    pic = CorrectImage()
    pic.add_path('data')
    pic.add_image('initial.png')

    pic.hough_transform(vary=False, plot=False)  # set vary True to change edge filters, plot True for visualizations
    pair = pic.line_pair(16)
    slopes = map(pic.slope, pair)
    loss_func = map(lambda s: loss(np.array(s[0]), np.array(s[1])), slopes)

    # print pair
    print(loss_func)
    print(health(loss_func, metric='arc_length'), '\n')

    pop = Population()
    pop.add_parents(pair, loss_func, 4)
    pop.add_children(pic.mutation, p_mutate=0.01)

    g = Graph()
    g.add_edge(1, 3, 0.5)
    g.add_edge(1, 2, 0.6)
    g.add_edge(2, 1, 0.6)
    g.add_edge(2, 3, 1)
    g.add_edge(3, 1, 0.5)
    g.add_edge(3, 2, 1)

    print(g.graph, g.nodes)
    print(g.dijkstra(1))

    min_arc_length([1.5707963267948966, 0.7853981633974483, 1.5102643070127895, -0.19739555984988072, -1.2036224929766774, -0.7853981633974483, 0.9505468408120753, -0.7853981633974483, -0.3519038254149648, 1.5707962017948809, -0.7853981633974483, -1.5707963267948966, -1.154731821071074, -0.8288490587889791, 0.1651486774146269, -0.5880026035475676, 1.0303768265243125, -0.7854031633724484, -1.1659045405098132, -0.32175055439664224, -0.12435499454676144, -0.5232783221319754, -1.5613626443888957, -0.7572931159369924, -0.7853981633974483, -0.7665324773757776, -0.7853981633974483, -1.2924966677897853, -0.6435011087932844, -0.7853981633974483, -1.2924966677897853, -1.4000611153196139, -0.7853981633974483, -0.7853981633974483, 0.9505468408120753, -0.8794593980254346, 1.5707963267948966, -0.6435011087932844, 0.26356388358303784, -0.7900064257075687, 1.5707959934614522, -0.7853981633974483, -0.7853981633974483, -0.6696389456766376, -1.0004130451449549, 1.5707963267948966, -1.2847448850775784, -1.5707963267948966, 1.5707963267948966, -1.5707963267948966, 1.5707963267948966, -0.5123894603107377, 1.489892227639666, -1.5707963267948966, -0.7853980633974383, -0.7853981633974483, 0.0, 1.5707963267948966, -0.46364760900080615, -0.5123894603107377, -0.7826331934850635, -0.7853970205389993, 0.0, -0.7853978062544636, -0.7853980633974383, -0.7853981633974483, 1.5707963267948966, -0.7853981633974483, -0.7853979633974083, -0.7853981633974483, -0.5724598138180511, -0.982793723247329, -0.7853983633974083, 0.5880026035475675, -1.5707963267948966, -0.7853981633974483, -0.32175055439664224, -0.7853981633974483, -0.7853981633974483, -0.7853981633974483, -0.851966327173272, -0.9944211062037129, -1.5707963267948966, -0.7747828508911005, -0.40489178628508343, -0.7853981633974483, 0.32175055439664213, -0.7853981633974483, -0.7853981633974483, 1.5707961267948567, 0.7853981633974483, -0.21866894587394195, -0.7853982633974382, -0.7853981633974483, -0.791246049951337, -1.5707963267948966, -0.7853981633974483, -0.7853981633974483, -0.7853981633974483, -1.0191413442663497])


if __name__ == '__main__':
    main()
